def add_integer(a, b=98):
    """
    Adds two integers.

    Args:
        a (int): The first integer.
        b (int, optional): The second integer. Defaults to 98.

    Returns:
        int: The sum of a and b.

    Raises:
        TypeError: If a or b is not an integer.

    Examples:
        >>> add_integer(1, 2)
        3
        >>> add_integer(100, -2)
        98
        >>> add_integer(2.1)
        100
        >>> add_integer(100.3, -2)
        98
        >>> add_integer(4, "School")
        Traceback (most recent call last):
            ...
        TypeError: b must be an integer
        >>> add_integer(None)
        Traceback (most recent call last):
            ...
        TypeError: a must be an integer
        >>> add_integer('1', 1)
        Traceback (most recent call last):
            ...
        TypeError: a must be an integer
        >>> add_integer('2', '1')
        Traceback (most recent call last):
            ...
        TypeError: a must be an integer
        >>> add_integer((1, 1))
        Traceback (most recent call last):
            ...
        TypeError: a must be an integer
        >>> add_integer(123, [])
        Traceback (most recent call last):
            ...
        TypeError: b must be an integer
        >>> add_integer("Hello")
        Traceback (most recent call last):
            ...
        TypeError: a must be an integer
        >>> add_integer(2.9, 2.9)
        4
        >>> add_integer(-1)
        97
        >>> add_integer(float('inf'), 0)
        Traceback (most recent call last):
            ...
        OverflowError: cannot convert float infinity to integer
        >>> add_integer(float('inf'), float('-inf'))
        Traceback (most recent call last):
            ...
        OverflowError: cannot convert float infinity to integer
        >>> add_integer(0, float('nan'))
        Traceback (most recent call last):
            ...
        ValueError: cannot convert float NaN to integer
    """
    if not isinstance(a, (int, float)):
        raise TypeError("a must be an integer")
    if not isinstance(b, (int, float)):
        raise TypeError("b must be an integer")
    if isinstance(a, float) or isinstance(b, float):
        a = int(a)
        b = int(b)
    return a + b
