def test_matrix_functions():
    """
    Test cases for the matrix functions.

    >>> matrix_mul([[1, 2], [3, 4]], [[5, 6], [7, 8]])
    [[19, 22], [43, 50]]

    >>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[7, 8], [9, 10], [11, 12]])
    [[58, 64], [139, 154]]

    >>> matrix_mul([[1, 2], [3, 4]], [[5, 6, 7], [8, 9, 10]])
    Traceback (most recent call last):
        ...
    ValueError: matrix_a and matrix_b can't be multiplied

    >>> matrix_mul([[1, 2], [3, 4]], [])
    Traceback (most recent call last):
        ...
    ValueError: matrix_b can't be empty

    >>> matrix_mul([[1, 2], [3, 4]], [[], []])
    Traceback (most recent call last):
        ...
    ValueError: each row of matrix_b must be of the same size

    >>> matrix_mul([], [])
    Traceback (most recent call last):
        ...
    ValueError: matrix_a and matrix_b can't be empty

    >>> matrix_mul([1, 2, 3], [4, 5, 6])
    Traceback (most recent call last):
        ...
    TypeError: matrix_a must be a list of lists

    >>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[7, '8'], [9, 10], [11, 12]])
    Traceback (most recent call last):
        ...
    TypeError: matrix_b should contain only integers or floats

    >>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[7, 8], [9, 10, 11], [12, 13]])
    Traceback (most recent call last):
        ...
    TypeError: each row of matrix_b must be of the same size
    """
    pass

if __name__ == "__main__":
    import doctest
    doctest.testmod()
